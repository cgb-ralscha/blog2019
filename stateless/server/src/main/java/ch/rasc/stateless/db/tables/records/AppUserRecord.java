/*
 * This file is generated by jOOQ.
 */
package ch.rasc.stateless.db.tables.records;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ch.rasc.stateless.db.tables.AppUser;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppUserRecord extends UpdatableRecordImpl<AppUserRecord>
    implements Record5<Long, String, String, String, Boolean> {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>APP_USER.ID</code>.
   */
  public void setId(Long value) {
    set(0, value);
  }

  /**
   * Getter for <code>APP_USER.ID</code>.
   */
  public Long getId() {
    return (Long) get(0);
  }

  /**
   * Setter for <code>APP_USER.EMAIL</code>.
   */
  public void setEmail(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>APP_USER.EMAIL</code>.
   */
  public String getEmail() {
    return (String) get(1);
  }

  /**
   * Setter for <code>APP_USER.PASSWORD_HASH</code>.
   */
  public void setPasswordHash(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>APP_USER.PASSWORD_HASH</code>.
   */
  public String getPasswordHash() {
    return (String) get(2);
  }

  /**
   * Setter for <code>APP_USER.AUTHORITY</code>.
   */
  public void setAuthority(String value) {
    set(3, value);
  }

  /**
   * Getter for <code>APP_USER.AUTHORITY</code>.
   */
  public String getAuthority() {
    return (String) get(3);
  }

  /**
   * Setter for <code>APP_USER.ENABLED</code>.
   */
  public void setEnabled(Boolean value) {
    set(4, value);
  }

  /**
   * Getter for <code>APP_USER.ENABLED</code>.
   */
  public Boolean getEnabled() {
    return (Boolean) get(4);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record5 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row5<Long, String, String, String, Boolean> fieldsRow() {
    return (Row5) super.fieldsRow();
  }

  @Override
  public Row5<Long, String, String, String, Boolean> valuesRow() {
    return (Row5) super.valuesRow();
  }

  @Override
  public Field<Long> field1() {
    return AppUser.APP_USER.ID;
  }

  @Override
  public Field<String> field2() {
    return AppUser.APP_USER.EMAIL;
  }

  @Override
  public Field<String> field3() {
    return AppUser.APP_USER.PASSWORD_HASH;
  }

  @Override
  public Field<String> field4() {
    return AppUser.APP_USER.AUTHORITY;
  }

  @Override
  public Field<Boolean> field5() {
    return AppUser.APP_USER.ENABLED;
  }

  @Override
  public Long component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getEmail();
  }

  @Override
  public String component3() {
    return getPasswordHash();
  }

  @Override
  public String component4() {
    return getAuthority();
  }

  @Override
  public Boolean component5() {
    return getEnabled();
  }

  @Override
  public Long value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getEmail();
  }

  @Override
  public String value3() {
    return getPasswordHash();
  }

  @Override
  public String value4() {
    return getAuthority();
  }

  @Override
  public Boolean value5() {
    return getEnabled();
  }

  @Override
  public AppUserRecord value1(Long value) {
    setId(value);
    return this;
  }

  @Override
  public AppUserRecord value2(String value) {
    setEmail(value);
    return this;
  }

  @Override
  public AppUserRecord value3(String value) {
    setPasswordHash(value);
    return this;
  }

  @Override
  public AppUserRecord value4(String value) {
    setAuthority(value);
    return this;
  }

  @Override
  public AppUserRecord value5(Boolean value) {
    setEnabled(value);
    return this;
  }

  @Override
  public AppUserRecord values(Long value1, String value2, String value3, String value4,
      Boolean value5) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached AppUserRecord
   */
  public AppUserRecord() {
    super(AppUser.APP_USER);
  }

  /**
   * Create a detached, initialised AppUserRecord
   */
  public AppUserRecord(Long id, String email, String passwordHash, String authority,
      Boolean enabled) {
    super(AppUser.APP_USER);

    setId(id);
    setEmail(email);
    setPasswordHash(passwordHash);
    setAuthority(authority);
    setEnabled(enabled);
  }
}
