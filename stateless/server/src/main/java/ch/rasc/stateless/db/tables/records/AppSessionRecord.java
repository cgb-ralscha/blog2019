/*
 * This file is generated by jOOQ.
 */
package ch.rasc.stateless.db.tables.records;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import ch.rasc.stateless.db.tables.AppSession;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppSessionRecord extends UpdatableRecordImpl<AppSessionRecord>
    implements Record3<String, Long, LocalDateTime> {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>APP_SESSION.ID</code>.
   */
  public void setId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>APP_SESSION.ID</code>.
   */
  public String getId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>APP_SESSION.APP_USER_ID</code>.
   */
  public void setAppUserId(Long value) {
    set(1, value);
  }

  /**
   * Getter for <code>APP_SESSION.APP_USER_ID</code>.
   */
  public Long getAppUserId() {
    return (Long) get(1);
  }

  /**
   * Setter for <code>APP_SESSION.VALID_UNTIL</code>.
   */
  public void setValidUntil(LocalDateTime value) {
    set(2, value);
  }

  /**
   * Getter for <code>APP_SESSION.VALID_UNTIL</code>.
   */
  public LocalDateTime getValidUntil() {
    return (LocalDateTime) get(2);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<String> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record3 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row3<String, Long, LocalDateTime> fieldsRow() {
    return (Row3) super.fieldsRow();
  }

  @Override
  public Row3<String, Long, LocalDateTime> valuesRow() {
    return (Row3) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return AppSession.APP_SESSION.ID;
  }

  @Override
  public Field<Long> field2() {
    return AppSession.APP_SESSION.APP_USER_ID;
  }

  @Override
  public Field<LocalDateTime> field3() {
    return AppSession.APP_SESSION.VALID_UNTIL;
  }

  @Override
  public String component1() {
    return getId();
  }

  @Override
  public Long component2() {
    return getAppUserId();
  }

  @Override
  public LocalDateTime component3() {
    return getValidUntil();
  }

  @Override
  public String value1() {
    return getId();
  }

  @Override
  public Long value2() {
    return getAppUserId();
  }

  @Override
  public LocalDateTime value3() {
    return getValidUntil();
  }

  @Override
  public AppSessionRecord value1(String value) {
    setId(value);
    return this;
  }

  @Override
  public AppSessionRecord value2(Long value) {
    setAppUserId(value);
    return this;
  }

  @Override
  public AppSessionRecord value3(LocalDateTime value) {
    setValidUntil(value);
    return this;
  }

  @Override
  public AppSessionRecord values(String value1, Long value2, LocalDateTime value3) {
    value1(value1);
    value2(value2);
    value3(value3);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached AppSessionRecord
   */
  public AppSessionRecord() {
    super(AppSession.APP_SESSION);
  }

  /**
   * Create a detached, initialised AppSessionRecord
   */
  public AppSessionRecord(String id, Long appUserId, LocalDateTime validUntil) {
    super(AppSession.APP_SESSION);

    setId(id);
    setAppUserId(appUserId);
    setValidUntil(validUntil);
  }
}
